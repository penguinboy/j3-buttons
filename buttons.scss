@import "mixins";


/* Colored button mixin 
 * 
 * Apply this with the color of your choice
 * to get a consistent styling of buttons.
 */

@mixin button($hue, $val: 0%) {
	$color: hsl($hue, 100%, 15%);
	@if $val >= 0 { color: lighten($color, $val); }
	@else { color: darken($color, $val * -1); }
	
	border: 1px solid hsl($hue, 50%, 39%);
	text-shadow: 0 1px hsl($hue, 100%, 90%);
	
	$top: hsl($hue, 70%, 76%);
	@if $val >= 0 { $top: lighten($top, $val); }
	@else { $top: darken($top, $val * -1); }
	
	$bottom: hsl($hue, 60%, 67%);
	@if $val >= 0 { $bottom: lighten($bottom, $val); }
	@else { $bottom: darken($bottom, $val * -1); }
	@include grad($top, $bottom);
	
	$shadow: hsl($hue, 100%, 90%);
	@if $val >= 0 { $shadow: lighten($shadow, $val); }
	@else { $shadow: darken($shadow, $val * -1); }
	@include box-shadow(inset 0 1px 0 $shadow);
}


/* generic button */

.button,
button {
	// box model
	display: inline-block;
	padding: 0.4em;
	margin: 1px;
	width: auto;
	
	// typography
	font-weight: normal;
	font-size: 1em;
	font-family: Verdana, sans-serif;
	text-decoration: none;
	text-align: center;
	line-height: normal;
	letter-spacing: -0.01em;
	
	// layout
	-moz-appearance: button;
	-moz-box-sizing: content-box;
	
	// other
	cursor: pointer;
	outline: none;
	
	// text
	color: darken(#333, 10%);
	text-shadow: 0 1px #fff;
	
	// border
	border: 1px solid darken(#bbb, 10%);
	@include border-radius(0.3em);
	@include box-shadow(inset 0 1px 0 #fff);
	
	// fill
	@include grad(darken(#fff, 10%), darken(#eee, 10%));
	
	// default hover/focus
	&:hover,&:focus {
		color: #333;
		border: 1px solid #bbb;
		text-shadow: 0 1px #fff;
		@include grad(#fff, #eee);
	}
	
	// some built-in color-styles

	&.default {
		@include button(200);
		
		&:hover, &:focus {
			@include button(200, 10%);
		}
	}
	
	&.negative {
		@include button(5);
		text-shadow: none;
		
		&:hover, &:focus {
			@include button(5, 10%);
		}
	}
	
	&.positive {
		@include button(90);
		
		&:hover,&:focus {
			@include button(90, 10%);
		}
	}

	&.dark {
		color: hsl(0, 0%, 20%);
		border: 1px solid hsl(0, 0%, 39%);
		text-shadow: 0 1px hsl(0, 0%, 90%);
		@include grad(hsl(0, 0%, 76%), hsl(0, 0%, 67%));
		@include box-shadow(inset 0 1px 0 hsl(0, 0%, 90%));
		
		&:hover, &:focus {
			@include grad(hsl(0, 0%, 86%), hsl(0, 0%, 77%));
		}
	}
	
	// default layout options
	
	&.left {
		@include border-radius(0.3em 0 0 0.3em);
		margin-right: -4px !important;
		border-right: none;
	}

	&.middle {
		@include border-radius(0);
		margin-left: 0;
		margin-right: -4px;
		border-right: none;
	}

	&.right {
		@include border-radius(0 0.3em 0.3em 0);
		margin-left: 0 !important;
	}
	
	&.pill {
		@include border-radius(1em);
		padding-left: 0.9em;
		padding-right: 0.9em;
	}
	
	// default disabled
	&.disabled,&[disabled] {
		// remove gradient
		background-image: none !important;
		filter: none !important;
		
		// remove shadows
		text-shadow: none;
		@include box-shadow(none);
		
		// reduce opacity
		-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
		filter: alpha(opacity=50);
		-moz-opacity: 0.5;
		opacity: 0.5;
		
		// remove pointer
		cursor: default;
	}
}